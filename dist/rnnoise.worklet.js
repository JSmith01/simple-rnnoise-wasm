{let t,e;registerProcessor("rnnoise",class extends AudioWorkletProcessor{constructor(s){super({...s,numberOfInputs:1,numberOfOutputs:1,outputChannelCount:[1]}),t||(e=new Float32Array((t=new WebAssembly.Instance(s.processorOptions.module).exports).memory.buffer)),this.state=t.newState(),this.alive=!0,this.port.onmessage=({data:e})=>{this.alive&&(e?this.port.postMessage({vadProb:t.getVadProb(this.state)}):(this.alive=!1,t.deleteState(this.state)))}}process(s,r,o){if(this.alive){e.set(s[0][0],t.getInput(this.state)/4);let o=r[0][0],a=t.pipe(this.state,o.length)/4;return a&&o.set(e.subarray(a,a+o.length)),!0}}})}
//# sourceMappingURL=rnnoise.worklet.js.map